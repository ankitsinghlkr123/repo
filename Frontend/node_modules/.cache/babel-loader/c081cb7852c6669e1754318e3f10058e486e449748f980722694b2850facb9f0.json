{"ast":null,"code":"var _jsxFileName = \"D:\\\\New folder\\\\client\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\n// inside src/Login.jsx\n\nimport React, { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\"; // Import Axios\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm();\n\n  // State to track if user is logged in\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [userName, setUserName] = useState(\"\"); // To store user's name or email\n\n  const onSubmit = async data => {\n    try {\n      // Send a POST request to the login endpoint\n      const response = await axios.post(\"http://localhost:4000/login\", {\n        email: data.email,\n        password: data.password\n      });\n\n      // Handle successful login\n      console.log(response.data.message); // Assuming the server sends a success message\n      localStorage.setItem(\"token\", response.data.token); // Example of storing JWT token\n\n      // Update state to reflect user is logged in\n      setIsLoggedIn(true);\n      setUserName(data.email); // Store user's email or name\n    } catch (error) {\n      // Handle error responses from the server\n      if (error.response) {\n        console.log(error.response.data.message); // Assuming the server sends an error message\n      } else {\n        console.log(\"An error occurred while logging in:\", error.message);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"title\",\n      children: \"Login Form\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), isLoggedIn ?\n    /*#__PURE__*/\n    // Conditional rendering based on login status\n    _jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Welcome, \", userName, \"!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"You are successfully logged in.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"App\",\n      onSubmit: handleSubmit(onSubmit),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        ...register(\"email\", {\n          required: true\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }, this), errors.email && /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          color: \"red\"\n        },\n        children: \"*Email* is mandatory \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 38\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        ...register(\"password\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        style: {\n          backgroundColor: \"#a1eafb\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"sUy8yPYeTlkcP2iz/j14gTVkTws=\", false, function () {\n  return [useForm];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useForm","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","register","handleSubmit","formState","errors","isLoggedIn","setIsLoggedIn","userName","setUserName","onSubmit","data","response","post","email","password","console","log","message","localStorage","setItem","token","error","children","className","fileName","_jsxFileName","lineNumber","columnNumber","type","required","style","color","backgroundColor","_c","$RefreshReg$"],"sources":["D:/New folder/client/src/App.jsx"],"sourcesContent":["// inside src/Login.jsx\n\nimport React, { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\"; // Import Axios\nimport \"./App.css\";\n\nfunction App() {\n    const {\n        register,\n        handleSubmit,\n        formState: { errors },\n    } = useForm();\n\n    // State to track if user is logged in\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\n    const [userName, setUserName] = useState(\"\"); // To store user's name or email\n\n    const onSubmit = async (data) => {\n        try {\n            // Send a POST request to the login endpoint\n            const response = await axios.post(\"http://localhost:4000/login\", {\n                email: data.email,\n                password: data.password,\n            });\n\n            // Handle successful login\n            console.log(response.data.message); // Assuming the server sends a success message\n            localStorage.setItem(\"token\", response.data.token); // Example of storing JWT token\n\n            // Update state to reflect user is logged in\n            setIsLoggedIn(true);\n            setUserName(data.email); // Store user's email or name\n\n        } catch (error) {\n            // Handle error responses from the server\n            if (error.response) {\n                console.log(error.response.data.message); // Assuming the server sends an error message\n            } else {\n                console.log(\"An error occurred while logging in:\", error.message);\n            }\n        }\n    };\n\n    return (\n        <>\n            <p className=\"title\">Login Form</p>\n\n            {isLoggedIn ? (  // Conditional rendering based on login status\n                <div>\n                    <h2>Welcome, {userName}!</h2>\n                    <p>You are successfully logged in.</p>\n                    {/* You can add more elements here to show after login */}\n                </div>\n            ) : (\n                <form className=\"App\" onSubmit={handleSubmit(onSubmit)}>\n                    <input type=\"email\" {...register(\"email\", { required: true })} />\n                    {errors.email && <span style={{ color: \"red\" }}>\n                        *Email* is mandatory </span>}\n                    <input type=\"password\" {...register(\"password\")} />\n                    <input type={\"submit\"} style={{ backgroundColor: \"#a1eafb\" }} />\n                </form>\n            )}\n        </>\n    );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}